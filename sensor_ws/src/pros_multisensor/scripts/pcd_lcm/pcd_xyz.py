"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class pcd_xyz(object):
    __slots__ = ["pcd_x", "pcd_y", "pcd_z"]

    __typenames__ = ["int16_t", "int16_t", "int16_t"]

    __dimensions__ = [[38528], [38528], [38528]]

    def __init__(self):
        self.pcd_x = [ 0 for dim0 in range(38528) ]
        self.pcd_y = [ 0 for dim0 in range(38528) ]
        self.pcd_z = [ 0 for dim0 in range(38528) ]

    def encode(self):
        buf = BytesIO()
        buf.write(pcd_xyz._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack('>38528h', *self.pcd_x[:38528]))
        buf.write(struct.pack('>38528h', *self.pcd_y[:38528]))
        buf.write(struct.pack('>38528h', *self.pcd_z[:38528]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != pcd_xyz._get_packed_fingerprint():
            raise ValueError("Decode error")
        return pcd_xyz._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = pcd_xyz()
        self.pcd_x = struct.unpack('>38528h', buf.read(77056))
        self.pcd_y = struct.unpack('>38528h', buf.read(77056))
        self.pcd_z = struct.unpack('>38528h', buf.read(77056))
        return self
    _decode_one = staticmethod(_decode_one)

    def _get_hash_recursive(parents):
        if pcd_xyz in parents: return 0
        tmphash = (0x678f7529bb267cdf) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if pcd_xyz._packed_fingerprint is None:
            pcd_xyz._packed_fingerprint = struct.pack(">Q", pcd_xyz._get_hash_recursive([]))
        return pcd_xyz._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

    def get_hash(self):
        """Get the LCM hash of the struct"""
        return struct.unpack(">Q", pcd_xyz._get_packed_fingerprint())[0]

